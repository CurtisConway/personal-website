{"version":3,"sources":["data.js","scripts.js"],"names":["musoraImageList","mobile","tablet","desktop","window","onload","imageListDialog","ImageListDialog","data","document","addEventListener","event","element","target","matches","openDialog","closeDialog","nextSlide","previousSlide","body","classList","toggle","imageType","getSlides","imageLists","querySelectorAll","imageDialog","querySelector","imageSlide","imageSlideImage","cdnUrl","dialogActive","activeListId","dialogSlides","currentSlide","getImageTypeByBreakpoint","initLists","oldImageType","lists","Array","from","forEach","list","listId","getAttribute","images","innerHTML","image","item","createElement","dataset","getThumb","appendChild","baseUrl","matchMedia","listItem","add","parentElement","children","indexOf","remove","activeSlide","getSlideUrl","src","preloadSlides","filter","slide","Image","length","Element","prototype","msMatchesSelector","webkitMatchesSelector"],"mappings":"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","file":"scripts.564220ab.js","sourceRoot":"..","sourcesContent":["export default {\r\n    musoraImageList: {\r\n        mobile: [\r\n            'v1582934531/drumeo_home_mobile_nsgqtx.jpg',\r\n            'v1582934531/drumeo_learningpath_mobile_wwxpof.jpg',\r\n            'v1582934531/drumeo_course_mobile_eurtcm.jpg',\r\n            'v1582934531/drumeo_lesson_mobile_i0oory.jpg',\r\n            'v1582934531/drumeo_assignment_mobile_ruylcb.jpg',\r\n            'v1582934532/drumeo_soundslice_mobile_iehssh.jpg',\r\n            'v1582934532/drumeo_shows_mobile_tdv58h.jpg',\r\n            'v1582934531/drumeo_playalongs_mobile_grlgba.jpg',\r\n            'v1582934532/drumeo_profile_mobile_iyw0ie.jpg',\r\n            'v1582934532/pianote_home_mobile_vgzvgl.jpg',\r\n            'v1582934532/pianote_learningpath_mobile_ruumc0.jpg',\r\n            'v1582934532/pianote_lesson_mobile_ip1mey.jpg',\r\n            'v1582934532/pianote_assignment_mobile_dqvbse.jpg',\r\n            'v1582934532/pianote_soundslice_mobile_g0udjq.jpg',\r\n            'v1582934532/pianote_profile_mobile_fbhkjc.jpg',\r\n            'v1582934532/pianote_forums_mobile_wjnzhb.jpg',\r\n            'v1582934532/pianote_thread_mobile_v0kl12.jpg',\r\n        ],\r\n        tablet: [\r\n            'v1582936560/drumeo_home_tablet_c2ukvm.jpg',\r\n            'v1582936560/drumeo_learningpath_tablet_wcky6q.jpg',\r\n            'v1582936560/drumeo_course_tablet_lvacim.jpg',\r\n            'v1582936560/drumeo_lesson_tablet_ftsoqq.jpg',\r\n            'v1582936561/drumeo_assignment_tablet_en5wcc.jpg',\r\n            'v1582936560/drumeo_soundslice_tablet_ybvcih.jpg',\r\n            'v1582936560/drumeo_shows_tablet_oerpmy.jpg',\r\n            'v1582936560/drumeo_playalongs_tablet_nbounz.jpg',\r\n            'v1582936560/drumeo_profile_tablet_npsono.jpg',\r\n            'v1582936561/pianote_home_tablet_wyh9gp.jpg',\r\n            'v1582936560/pianote_learningpath_tablet_vjetus.jpg',\r\n            'v1582936561/pianote_lesson_tablet_tnvzga.jpg',\r\n            'v1582936560/pianote_assignment_tablet_vudmme.jpg',\r\n            'v1582936561/pianote_soundslice_tablet_usxlqj.jpg',\r\n            'v1582936561/pianote_profile_tablet_fdlssx.jpg',\r\n            'v1582936560/pianote_forums_tablet_caiyd4.jpg',\r\n            'v1582934532/pianote_thread_mobile_v0kl12.jpg',\r\n        ],\r\n        desktop: [\r\n            'v1582930947/drumeo_home_desktop_lxonpx.jpg',\r\n            'v1582930947/drumeo_learningpath_desktop_ykjzfd.jpg',\r\n            'v1582930946/drumeo_course_desktop_gve8tq.jpg',\r\n            'v1582930946/drumeo_lesson_desktop_h39gks.jpg',\r\n            'v1582930946/drumeo_assignment_desktop_s1amqx.jpg',\r\n            'v1582930947/drumeo_soundslice_desktop_ayyh6b.jpg',\r\n            'v1582930947/drumeo_shows_desktop_rkunpy.jpg',\r\n            'v1582930946/drumeo_playalongs_desktop_emickm.jpg',\r\n            'v1582930947/drumeo_profile_desktop_dwkfeh.jpg',\r\n            'v1582927655/pianote_home_desktop_t9ul1p.jpg',\r\n            'v1582927655/pianote_learningpath_desktop_zlmmj3.jpg',\r\n            'v1582927655/pianote_lesson_desktop_iq2iqh.jpg',\r\n            'v1582927654/pianote_assignment_desktop_kvkgd7.jpg',\r\n            'v1582927655/pianote_soundslice_desktop_grx7fc.jpg',\r\n            'v1582927655/pianote_profile_desktop_pckuhp.jpg',\r\n            'v1582927654/pianote_forums_desktop_y6vlb1.jpg',\r\n            'v1582927655/pianote_thread_desktop_zrowqy.jpg',\r\n        ],\r\n    }\r\n}","import data from './data';\r\n\r\nwindow.onload = () => {\r\n    const imageListDialog = new ImageListDialog(data);\r\n\r\n    document.addEventListener('click', event => {\r\n        const element = event.target;\r\n\r\n        if(element.matches('.image_list li')) {\r\n            imageListDialog.openDialog(element);\r\n        }\r\n\r\n        if(element.matches('.close_dialog, .dialog_background')) {\r\n            imageListDialog.closeDialog();\r\n        }\r\n\r\n        if(element.matches('.next_image')) {\r\n            imageListDialog.nextSlide();\r\n        }\r\n\r\n        if(element.matches('.previous_image')) {\r\n            imageListDialog.previousSlide();\r\n        }\r\n\r\n        if(element.matches('.color_mode_button')) {\r\n            document.body.classList.toggle('light_mode');\r\n        }\r\n\r\n        if(element.matches('.desktop_button')) {\r\n            imageListDialog.imageType = 'desktop';\r\n            imageListDialog.getSlides();\r\n        }\r\n\r\n        if(element.matches('.tablet_button')) {\r\n            imageListDialog.imageType = 'tablet';\r\n            imageListDialog.getSlides();\r\n        }\r\n\r\n        if(element.matches('.mobile_button')) {\r\n            imageListDialog.imageType = 'mobile';\r\n            imageListDialog.getSlides();\r\n        }\r\n    });\r\n};\r\n\r\nclass ImageListDialog {\r\n    constructor(data){\r\n        const imageLists = document.querySelectorAll('.image_list');\r\n        this.data = data;\r\n        this.imageDialog = document.querySelector('.image_dialog');\r\n        this.imageSlide = document.querySelector('.image_slide');\r\n        this.imageSlideImage = this.imageSlide.querySelector('img');\r\n        this.cdnUrl = 'https://res.cloudinary.com/dloxgdltu/image/upload';\r\n        this.dialogActive = false;\r\n        this.activeListId = null;\r\n        this.dialogSlides = [];\r\n        this.currentSlide = 0;\r\n\r\n        this.imageType = this.getImageTypeByBreakpoint();\r\n        this.initLists(imageLists);\r\n\r\n        // Re initialize the lists if the window is resized to a different orientation/breakpoint\r\n        window.addEventListener('resize', () => {\r\n            const oldImageType = this.imageType;\r\n            this.imageType = this.getImageTypeByBreakpoint();\r\n\r\n            if(oldImageType !== this.imageType) {\r\n                this.initLists(imageLists);\r\n\r\n                if(this.activeListId != null){\r\n                    this.getSlides(this.activeListId);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    initLists(lists) {\r\n        Array.from(lists).forEach((list) => {\r\n            const listId = list.getAttribute('id');\r\n            const data = this.data[listId] || {};\r\n            const images = data[this.imageType];\r\n\r\n            // Clear the list if it has items already\r\n            list.innerHTML = '';\r\n\r\n            images.forEach((image) => {\r\n                const item = document.createElement('li');\r\n                item.dataset['listId'] = listId;\r\n                item.innerHTML = `<img src=\"${this.getThumb(image)}\" alt=\"Musora Screenshot Thumbnail\" />`;\r\n\r\n                list.appendChild(item);\r\n            });\r\n        });\r\n    }\r\n\r\n    getThumb(image) {\r\n        const baseUrl = `${this.cdnUrl}/ar_1:1,c_fill,g_auto,w_250`;\r\n        return `${baseUrl}/${image}`;\r\n    }\r\n\r\n    getImageTypeByBreakpoint() {\r\n        if (window.matchMedia('(orientation: landscape)').matches) {\r\n            return 'desktop';\r\n        }\r\n\r\n        if (\r\n            window.matchMedia('(min-width: 760px)').matches &&\r\n            window.matchMedia('(orientation: portrait)').matches\r\n        ) {\r\n            return 'tablet';\r\n        }\r\n\r\n        return 'mobile';\r\n    }\r\n\r\n    openDialog(listItem) {\r\n        this.imageDialog.classList.add('active');\r\n        this.dialogActive = true;\r\n        this.activeListId = listItem.dataset['listId'];\r\n        this.currentSlide = Array.from(listItem.parentElement.children).indexOf(listItem);\r\n\r\n        this.getSlides();\r\n    }\r\n\r\n    closeDialog() {\r\n        this.imageDialog.classList.remove('active');\r\n        this.dialogActive = false;\r\n    }\r\n\r\n    getSlides() {\r\n        this.dialogSlides = data[this.activeListId][this.imageType];\r\n        const currentSlide = this.dialogSlides[this.currentSlide];\r\n\r\n        this.activeSlide = this.getSlideUrl(currentSlide);\r\n\r\n        this.imageDialog.classList.remove('desktop', 'mobile', 'tablet');\r\n        this.imageDialog.classList.add(this.imageType);\r\n        this.imageSlideImage.src = this.activeSlide;\r\n\r\n        this.imageSlideImage.onload = () => {\r\n            this.preloadSlides(this.dialogSlides.filter(slide => slide !== currentSlide));\r\n        };\r\n    }\r\n\r\n    preloadSlides(slides = []) {\r\n        slides.forEach(slide => {\r\n            const image = new Image();\r\n            image.src = this.getSlideUrl(slide);\r\n        });\r\n    }\r\n\r\n    getSlideUrl(slide) {\r\n        return `${this.cdnUrl}/${slide}`;\r\n    }\r\n\r\n    nextSlide() {\r\n        this.currentSlide += 1;\r\n\r\n        if(this.currentSlide >= this.dialogSlides.length) {\r\n            this.currentSlide = 0;\r\n        }\r\n\r\n        this.activeSlide = this.getSlideUrl(this.dialogSlides[this.currentSlide]);\r\n        this.imageSlideImage.src = this.activeSlide;\r\n    }\r\n\r\n    previousSlide() {\r\n        this.currentSlide -= 1;\r\n\r\n        if(this.currentSlide < 0) {\r\n            this.currentSlide = this.dialogSlides.length - 1;\r\n        }\r\n\r\n        this.activeSlide = this.getSlideUrl(this.dialogSlides[this.currentSlide]);\r\n        this.imageSlideImage.src = this.activeSlide;\r\n    }\r\n}\r\n\r\nif (!Element.prototype.matches) {\r\n    Element.prototype.matches = Element.prototype.msMatchesSelector ||\r\n        Element.prototype.webkitMatchesSelector;\r\n}\r\n\r\n"]}